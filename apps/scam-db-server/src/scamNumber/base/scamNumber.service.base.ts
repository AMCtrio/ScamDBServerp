/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ScamNumber as PrismaScamNumber,
  Report as PrismaReport,
} from "@prisma/client";

export class ScamNumberServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ScamNumberCountArgs, "select">
  ): Promise<number> {
    return this.prisma.scamNumber.count(args);
  }

  async scamNumbers<T extends Prisma.ScamNumberFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.ScamNumberFindManyArgs>
  ): Promise<PrismaScamNumber[]> {
    return this.prisma.scamNumber.findMany<Prisma.ScamNumberFindManyArgs>(args);
  }
  async scamNumber<T extends Prisma.ScamNumberFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.ScamNumberFindUniqueArgs>
  ): Promise<PrismaScamNumber | null> {
    return this.prisma.scamNumber.findUnique(args);
  }
  async createScamNumber<T extends Prisma.ScamNumberCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ScamNumberCreateArgs>
  ): Promise<PrismaScamNumber> {
    return this.prisma.scamNumber.create<T>(args);
  }
  async updateScamNumber<T extends Prisma.ScamNumberUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.ScamNumberUpdateArgs>
  ): Promise<PrismaScamNumber> {
    return this.prisma.scamNumber.update<T>(args);
  }
  async deleteScamNumber<T extends Prisma.ScamNumberDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.ScamNumberDeleteArgs>
  ): Promise<PrismaScamNumber> {
    return this.prisma.scamNumber.delete(args);
  }

  async findReports(
    parentId: string,
    args: Prisma.ReportFindManyArgs
  ): Promise<PrismaReport[]> {
    return this.prisma.scamNumber
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .reports(args);
  }
}
